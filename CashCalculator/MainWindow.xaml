<Window x:Class="CashCalculator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Cash Calculator"
        Height="640"
        Width="420"
        ResizeMode="CanMinimize"
        WindowStartupLocation="CenterScreen"
        Background="{DynamicResource WindowBackgroundBrush}"
        Foreground="{DynamicResource WindowForegroundBrush}">

  <!-- ========= RESOURCES ========= -->
  <Window.Resources>

    <!--
        WindowBackgroundBrush:
        The primary background for application windows (light gray).
    -->
    <SolidColorBrush x:Key="WindowBackgroundBrush"                 Color="#FFF0F0F0"/>

    <!--
        WindowForegroundBrush:
        The primary text and foreground color (dark gray) in the window.
    -->
    <SolidColorBrush x:Key="WindowForegroundBrush"                 Color="#FF1E1E1E"/>

    <!--
        DataGridRowBackgroundBrush:
        Background for regular rows in DataGrid controls (white).
    -->
    <SolidColorBrush x:Key="DataGridRowBackgroundBrush"            Color="#FFFFFFFF"/>

    <!--
        DataGridAlternationRowBackgroundBrush:
        Background for alternating rows in DataGrids (very light gray).
    -->
    <SolidColorBrush x:Key="DataGridAlternationRowBackgroundBrush" Color="#FFF7F7F7"/>

    <!--
        DataGridBorderBrush:
        Brush used for DataGrid borders and gridlines (light gray).
    -->
    <SolidColorBrush x:Key="DataGridBorderBrush"                   Color="#FFCCCCCC"/>

    <!--
        AccentBrush:
        The accent color (blue) used for interactive elements.
    -->
    <SolidColorBrush x:Key="AccentBrush"                           Color="#FF4F94CD"/>

    <!--
        Style "NiceGrid":
        Base style for DataGrids:
        • No auto-generated columns
        • Column headers only
        • No gridlines
        • Alternating row backgrounds
        • Consistent row height, font size, and borders
    -->
    <Style x:Key="NiceGrid" TargetType="DataGrid">
      <Setter Property="AutoGenerateColumns"      Value="False"/>
      <Setter Property="HeadersVisibility"        Value="Column"/>
      <Setter Property="GridLinesVisibility"      Value="None"/>
      <Setter Property="AlternationCount"         Value="2"/>
      <Setter Property="RowBackground"            Value="{StaticResource DataGridRowBackgroundBrush}"/>
      <Setter Property="AlternatingRowBackground" Value="{StaticResource DataGridAlternationRowBackgroundBrush}"/>
      <Setter Property="RowHeight"                Value="28"/>
      <Setter Property="FontSize"                 Value="14"/>
      <Setter Property="BorderBrush"              Value="{StaticResource DataGridBorderBrush}"/>
      <Setter Property="BorderThickness"          Value="1"/>
      <Setter Property="SelectionMode"            Value="Single"/>
      <Setter Property="SelectionUnit"            Value="FullRow"/>
    </Style>

    <!--
        Style "NiceHeader":
        DataGrid column header styling:
        • Uniform background and foreground
        • Bold, centered text with padding
        • Bottom border for separation
    -->
    <Style x:Key="NiceHeader" TargetType="DataGridColumnHeader">
      <Setter Property="Background"                 Value="{StaticResource DataGridBorderBrush}"/>
      <Setter Property="Foreground"                 Value="{StaticResource WindowForegroundBrush}"/>
      <Setter Property="FontWeight"                 Value="Bold"/>
      <Setter Property="HorizontalContentAlignment" Value="Center"/>
      <Setter Property="FontSize"                   Value="14"/>
      <Setter Property="Padding"                    Value="5"/>
      <Setter Property="BorderThickness"            Value="0,0,0,1"/>
      <Setter Property="BorderBrush"                Value="{StaticResource DataGridBorderBrush}"/>
    </Style>

    <!--
        Style "NiceCell":
        DataGrid cell styling:
        • Centered content
        • Consistent padding and font size
    -->
    <Style x:Key="NiceCell" TargetType="DataGridCell">
      <Setter Property="Padding"                    Value="5"/>
      <Setter Property="HorizontalContentAlignment" Value="Center"/>
      <Setter Property="FontSize"                   Value="14"/>
    </Style>

    <!--
        Style "FlatButton":
        A button with no chrome, transparent background,
        and opacity feedback on hover/press.
    -->
    <Style x:Key="FlatButton" TargetType="Button">
      <Setter Property="OverridesDefaultStyle" Value="True"/>
      <Setter Property="Background"            Value="Transparent"/>
      <Setter Property="BorderBrush"           Value="Transparent"/>
      <Setter Property="BorderThickness"       Value="0"/>
      <Setter Property="Cursor"                Value="Hand"/>
      <Setter Property="Opacity"               Value="1"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="Button">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Style.Triggers>
        <Trigger Property="IsMouseOver" Value="True">
          <Setter Property="Opacity" Value="0.8"/>
        </Trigger>
        <Trigger Property="IsPressed" Value="True">
          <Setter Property="Opacity" Value="0.6"/>
        </Trigger>
      </Style.Triggers>
    </Style>

    <!--
        Style "FlatToggleButton":
        Similar to FlatButton but supports checked state opacity.
    -->
    <Style x:Key="FlatToggleButton" TargetType="ToggleButton">
      <Setter Property="OverridesDefaultStyle" Value="True"/>
      <Setter Property="Background"            Value="Transparent"/>
      <Setter Property="BorderBrush"           Value="Transparent"/>
      <Setter Property="BorderThickness"       Value="0"/>
      <Setter Property="Cursor"                Value="Hand"/>
      <Setter Property="Opacity"               Value="1"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ToggleButton">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Style.Triggers>
        <Trigger Property="IsMouseOver" Value="True">
          <Setter Property="Opacity" Value="0.8"/>
        </Trigger>
        <Trigger Property="IsPressed" Value="True">
          <Setter Property="Opacity" Value="0.6"/>
        </Trigger>
        <Trigger Property="IsChecked" Value="True">
          <Setter Property="Opacity" Value="0.6"/>
        </Trigger>
      </Style.Triggers>
    </Style>

    <!--
        Style "NumpadButton":
        Based on FlatButton, provides fixed size,
        rounded corners, and border for keypad buttons.
    -->
    <Style x:Key="NumpadButton" TargetType="Button" BasedOn="{StaticResource FlatButton}">
      <Setter Property="Width"           Value="60"/>
      <Setter Property="Height"          Value="60"/>
      <Setter Property="FontSize"        Value="26"/>
      <Setter Property="Background"      Value="{StaticResource WindowBackgroundBrush}"/>
      <Setter Property="BorderBrush"     Value="{StaticResource DataGridBorderBrush}"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="Button">
            <Border Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="8">
              <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!--
        DenomsViewSource:
        CollectionViewSource with a filter applied
        to hide/show denominations based on user settings.
    -->
    <CollectionViewSource x:Key="DenomsViewSource" Filter="DenomsFilter"/>

  </Window.Resources>

  <!-- ========= UI LAYOUT ========= -->
  <Grid>
    <TabControl>

      <!-- Calculator Tab -->
      <TabItem Header="Calculator">
        <Grid Margin="10">
          <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
          </Grid.RowDefinitions>

          <DockPanel Grid.Row="0" LastChildFill="False">

            <!-- Denominations DataGrid -->
            <Border x:Name="DenomBorder"
                    CornerRadius="8"
                    Background="{StaticResource WindowBackgroundBrush}"
                    BorderBrush="{StaticResource DataGridBorderBrush}"
                    BorderThickness="1"
                    Margin="0 0 0 10"
                    DockPanel.Dock="Top">
              <DataGrid x:Name="DenomsGrid"
                        Style="{StaticResource NiceGrid}"
                        ColumnHeaderStyle="{StaticResource NiceHeader}"
                        CellStyle="{StaticResource NiceCell}"
                        Background="Transparent"
                        CanUserAddRows="False"
                        ItemsSource="{Binding Source={StaticResource DenomsViewSource}}"
                        CellEditEnding="DenomsGrid_CellEditEnding"
                        PreviewTextInput="DataGrid_PreviewTextInput"
                        PreviewMouseLeftButtonDown="DenomsGrid_PreviewMouseLeftButtonDown">
                <DataGrid.Columns>
                  <!-- Status Glyph Column -->
                  <DataGridTemplateColumn Header="" Width="Auto">
                    <DataGridTemplateColumn.CellTemplate>
                      <DataTemplate>
                        <TextBlock Text="{Binding StatusGlyph}"
                                   Foreground="{Binding StatusBrush}"
                                   FontSize="16"/>
                      </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                  </DataGridTemplateColumn>
                  <!-- Denomination Value -->
                  <DataGridTextColumn Header="Номинал, ₽"
                                      Binding="{Binding Value}"
                                      Width="*"
                                      IsReadOnly="True"/>
                  <!-- Quantity Column -->
                  <DataGridTextColumn Header="Кол-во"
                                      Binding="{Binding Amount,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      Width="*"/>
                </DataGrid.Columns>
              </DataGrid>
            </Border>

            <!-- Summary DataGrid -->
            <Border x:Name="SummaryBorder"
                    CornerRadius="8"
                    Background="{StaticResource WindowBackgroundBrush}"
                    BorderBrush="{StaticResource DataGridBorderBrush}"
                    BorderThickness="1"
                    Margin="0 0 0 10"
                    DockPanel.Dock="Top">
              <DataGrid x:Name="SummaryGrid"
                        Style="{StaticResource NiceGrid}"
                        ColumnHeaderStyle="{StaticResource NiceHeader}"
                        CellStyle="{StaticResource NiceCell}"
                        Background="Transparent"
                        CanUserAddRows="False"
                        AutoGenerateColumns="False"
                        CellEditEnding="SummaryGrid_CellEditEnding"
                        PreviewTextInput="DataGrid_PreviewTextInput"
                        PreviewMouseLeftButtonDown="SummaryGrid_PreviewMouseLeftButtonDown"> <!-- добавлено -->
                <DataGrid.Columns>
                  <!-- Status Glyph Column -->
                  <DataGridTemplateColumn Header="" Width="Auto">
                    <DataGridTemplateColumn.CellTemplate>
                      <DataTemplate>
                        <TextBlock Text="{Binding StatusGlyph}"
                                   Foreground="{Binding StatusBrush}"
                                   FontSize="16"/>
                      </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                  </DataGridTemplateColumn>
                  <!-- Description Column -->
                  <DataGridTextColumn Header="Итоги"
                                      Binding="{Binding Description}"
                                      Width="0.8*"
                                      IsReadOnly="True"/>
                  <!-- Value Column (Expected / Difference) -->
                  <DataGridTextColumn Header="Сумма, ₽"
                                      Binding="{Binding Value,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      Width="*"/>
                </DataGrid.Columns>
              </DataGrid>
            </Border>

            <!-- Action Buttons: Copy, Clear, Touch Mode -->
            <StackPanel Orientation="Horizontal"
                        DockPanel.Dock="Top"
                        HorizontalAlignment="Center"
                        Margin="0 0 0 10">
              <Border CornerRadius="8" Background="{StaticResource WindowBackgroundBrush}"
                      BorderBrush="{StaticResource DataGridBorderBrush}" BorderThickness="1" Padding="2" Margin="0 0 10 0">
                <Button Style="{StaticResource FlatButton}"
                        Content="📋"
                        Width="30" Height="30"
                        Click="CopyReport_Click"/>
              </Border>
              <Border CornerRadius="8" Background="{StaticResource WindowBackgroundBrush}"
                      BorderBrush="{StaticResource DataGridBorderBrush}" BorderThickness="1" Padding="2" Margin="0 0 10 0">
                <Button Style="{StaticResource FlatButton}"
                        Content="🧹"
                        Width="30" Height="30"
                        Click="Clean_Click"/>
              </Border>
              <Border CornerRadius="8" Background="{StaticResource WindowBackgroundBrush}"
                      BorderBrush="{StaticResource DataGridBorderBrush}" BorderThickness="1" Padding="2">
                <ToggleButton x:Name="TouchModeButton"
                              Style="{StaticResource FlatToggleButton}"
                              Content="🔢"
                              Width="30" Height="30"
                              Checked="TouchModeButton_Checked"
                              Unchecked="TouchModeButton_Unchecked"
                              ToolTip="Touch Input"/>
              </Border>
            </StackPanel>
          </DockPanel>

          <!-- Footer Text -->
          <TextBlock Grid.Row="1"
                     Text="© 2025 Kremenchugskaya Team"
                     FontSize="10"
                     Foreground="{StaticResource DataGridBorderBrush}"
                     HorizontalAlignment="Center"
                     Margin="0 5"/>
        </Grid>
      </TabItem>

      <!-- Settings Tab -->
      <TabItem Header="Settings">
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
          </Grid.RowDefinitions>

          <!-- Visibility Filters and Instructions -->
          <ScrollViewer Grid.Row="0">
            <StackPanel Margin="10">

              <!-- Denomination Visibility Filters -->
              <TextBlock FontWeight="Bold"
                         FontSize="14"
                         Margin="0 0 0 10"
                         Text="Фильтр купюр"/>
              <ItemsControl ItemsSource="{Binding DenominationFilters}">
                <ItemsControl.ItemTemplate>
                  <DataTemplate>
                    <CheckBox Content="{Binding Value, StringFormat='{}{0}₽'}"
                              IsChecked="{Binding IsVisible}"
                              Margin="0 0 0 5"/>
                  </DataTemplate>
                </ItemsControl.ItemTemplate>
              </ItemsControl>

              <!-- Instruction Section -->
              <Separator Margin="0 15 0 15"/>
              <TextBlock FontWeight="Bold"
                         FontSize="14"
                         Margin="0 0 0 10"
                         Text="Инструкция"/>
              <StackPanel>
                <TextBlock Text="📋 — Скопировать отчет"                    Margin="0 0 0 4"/>
                <TextBlock Text="🧹 — Отчистить поля ввода"                  Margin="0 0 0 4"/>
                <TextBlock Text="🔢 — Переключить на сенсорный ввод"             Margin="0 0 0 4"/>
              </StackPanel>
              
              <Separator Margin="0 15 0 15"/>
              <TextBlock FontWeight="Bold"
                         FontSize="14"
                         Margin="0 0 0 10"
                         Text="Сведения о сборке"/>
              
              <TextBlock Text="build-0.2.1.2-beta.5"                    Margin="0 0 0 4"/>
              
              <TextBlock Margin="0 10 0 0"
                         FontSize="12"
                         TextWrapping="Wrap">
                <Run Text="GitHub репозиторий: "/>
                <Hyperlink NavigateUri="https://github.com/PrIIIcKoLyAZZZ/CashCalculator"
                           RequestNavigate="Hyperlink_RequestNavigate">
                  github.com/PrIIIcKoLyAZZZ/CashCalculator
                </Hyperlink>
              </TextBlock>
              
            </StackPanel>
          </ScrollViewer>

          <!-- Footer Text -->
          <TextBlock Grid.Row="1"
                     Text="© 2025 Kremenchugskaya Team"
                     FontSize="10"
                     Foreground="{StaticResource DataGridBorderBrush}"
                     HorizontalAlignment="Center"
                     Margin="0 5"/>
        </Grid>
      </TabItem>
    </TabControl>

    <!-- NUMPAD POPUP -->
    <Popup x:Name="NumpadPopup"
           AllowsTransparency="True"
           StaysOpen="True"
           Placement="Center">
      <Border CornerRadius="10"
              Padding="14"
              Background="White"
              BorderBrush="{StaticResource DataGridBorderBrush}"
              BorderThickness="1">
        <Border.Effect>
          <DropShadowEffect BlurRadius="10"
                            ShadowDepth="0"
                            Opacity="0.35"/>
        </Border.Effect>

        <StackPanel>
          <!-- Display for Numpad Input -->
          <Border Background="{StaticResource DataGridAlternationRowBackgroundBrush}"
                  CornerRadius="8"
                  Padding="8"
                  Margin="0 0 0 14">
            <TextBlock x:Name="NumpadDisplay"
                       FontSize="30"
                       FontWeight="Bold"
                       HorizontalAlignment="Center"/>
          </Border>

          <!-- Numpad Buttons -->
          <UniformGrid Columns="3" Rows="4" HorizontalAlignment="Center">
            <Button Style="{StaticResource NumpadButton}" Content="1" Click="Numpad_OnDigit"/>
            <Button Style="{StaticResource NumpadButton}" Content="2" Click="Numpad_OnDigit"/>
            <Button Style="{StaticResource NumpadButton}" Content="3" Click="Numpad_OnDigit"/>
            <Button Style="{StaticResource NumpadButton}" Content="4" Click="Numpad_OnDigit"/>
            <Button Style="{StaticResource NumpadButton}" Content="5" Click="Numpad_OnDigit"/>
            <Button Style="{StaticResource NumpadButton}" Content="6" Click="Numpad_OnDigit"/>
            <Button Style="{StaticResource NumpadButton}" Content="7" Click="Numpad_OnDigit"/>
            <Button Style="{StaticResource NumpadButton}" Content="8" Click="Numpad_OnDigit"/>
            <Button Style="{StaticResource NumpadButton}" Content="9" Click="Numpad_OnDigit"/>
            <Button Style="{StaticResource NumpadButton}" Content="⌫" Click="Numpad_OnBackspace"/>
            <Button Style="{StaticResource NumpadButton}" Content="0" Click="Numpad_OnDigit"/>
            <Button Style="{StaticResource NumpadButton}" Content="✓" Click="Numpad_OnEnter"/>
          </UniformGrid>
        </StackPanel>
      </Border>
    </Popup>
  </Grid>
</Window>